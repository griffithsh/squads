// Code generated by "stringer -output=./actor_string.go -type=ActorSize,ActorProfession,ActorSex,ActorPerformance"; DO NOT EDIT.

package game

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SMALL-0]
	_ = x[MEDIUM-1]
	_ = x[LARGE-2]
}

const _ActorSize_name = "SMALLMEDIUMLARGE"

var _ActorSize_index = [...]uint8{0, 5, 11, 16}

func (i ActorSize) String() string {
	if i < 0 || i >= ActorSize(len(_ActorSize_index)-1) {
		return "ActorSize(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ActorSize_name[_ActorSize_index[i]:_ActorSize_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Villager-0]
	_ = x[Wolf-1]
	_ = x[Giant-2]
	_ = x[Skeleton-3]
}

const _ActorProfession_name = "VillagerWolfGiantSkeleton"

var _ActorProfession_index = [...]uint8{0, 8, 12, 17, 25}

func (i ActorProfession) String() string {
	if i < 0 || i >= ActorProfession(len(_ActorProfession_index)-1) {
		return "ActorProfession(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ActorProfession_name[_ActorProfession_index[i]:_ActorProfession_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Male-0]
	_ = x[Female-1]
}

const _ActorSex_name = "MaleFemale"

var _ActorSex_index = [...]uint8{0, 4, 10}

func (i ActorSex) String() string {
	if i < 0 || i >= ActorSex(len(_ActorSex_index)-1) {
		return "ActorSex(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ActorSex_name[_ActorSex_index[i]:_ActorSex_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PerformIdle-0]
	_ = x[PerformMove-1]
	_ = x[PerformSkill1-2]
	_ = x[PerformSkill2-3]
	_ = x[PerformSkill3-4]
	_ = x[PerformHurt-5]
	_ = x[PerformDying-6]
	_ = x[PerformVictory-7]
}

const _ActorPerformance_name = "PerformIdlePerformMovePerformSkill1PerformSkill2PerformSkill3PerformHurtPerformDyingPerformVictory"

var _ActorPerformance_index = [...]uint8{0, 11, 22, 35, 48, 61, 72, 84, 98}

func (i ActorPerformance) String() string {
	if i < 0 || i >= ActorPerformance(len(_ActorPerformance_index)-1) {
		return "ActorPerformance(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ActorPerformance_name[_ActorPerformance_index[i]:_ActorPerformance_index[i+1]]
}
